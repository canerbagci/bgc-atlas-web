extends ../layout

block content
  .container-fluid.mt-4
    .row.mb-4
      .col-12
        h1.display-4 Admin Dashboard
        .d-flex.justify-content-end
          a.btn.btn-outline-danger(href="/admin/logout") Logout

    .row
      // Job Queue Section
      .col-md-6.mb-4
        .card.h-100
          .card-header.bg-primary.text-white
            h3.mb-0 Job Queue
          .card-body
            .row
              .col-md-4.text-center.mb-3
                .card.bg-light
                  .card-body
                    h4= queueStatus.queuedJobs
                    p.text-muted Queued Jobs
              .col-md-4.text-center.mb-3
                .card.bg-light
                  .card-body
                    h4= queueStatus.runningJobs
                    p.text-muted Running Jobs
              .col-md-4.text-center.mb-3
                .card.bg-light
                  .card-body
                    h4= queueStatus.completedJobs
                    p.text-muted Completed Jobs

            if queueStatus.queuedJobs > 0
              h5.mt-4 Queued Jobs
              .table-responsive
                table.table.table-sm.table-striped
                  thead
                    tr
                      th Job ID
                      th Type
                      th Created At
                  tbody
                    each job in queueStatus.queuedJobsList
                      tr
                        td= job.id
                        td= job.type
                        td= new Date(job.createdAt).toLocaleString()

            if queueStatus.runningJobs > 0
              h5.mt-4 Running Jobs
              .table-responsive
                table.table.table-sm.table-striped
                  thead
                    tr
                      th Job ID
                      th Type
                      th Started At
                  tbody
                    each job in queueStatus.runningJobsList
                      tr
                        td= job.id
                        td= job.type
                        td= new Date(job.startedAt).toLocaleString()

      // Unique Visitors Section
      .col-md-6.mb-4
        .card.h-100
          .card-header.bg-success.text-white
            h3.mb-0 Unique Visitors
          .card-body
            .row.mb-4
              .col-12.text-center
                h2.display-4= uniqueVisitors.total
                p.text-muted Total Unique Visitors

            if uniqueVisitors.byIP && uniqueVisitors.byIP.length > 0
              h5 Unique Visitors by IP
              .table-responsive
                table.table.table-sm.table-striped
                  thead
                    tr
                      th IP Address
                      th Country
                      th Visits
                  tbody
                    each visitor in uniqueVisitors.byIP
                      tr
                        td= visitor.ip
                        td= visitor.country || 'Unknown'
                        td= visitor.visits || 1

              h5.mt-4 Summary by Country
              .table-responsive
                table.table.table-sm.table-striped
                  thead
                    tr
                      th Country
                      th Count
                      th IP Addresses
                  tbody
                    each visitor in uniqueVisitors.byCountry
                      tr
                        td= visitor.country
                        td= visitor.count
                        td
                          if visitor.ips && visitor.ips.length > 0
                            small.text-muted= visitor.ips.join(', ')
                          else
                            small.text-muted No IPs recorded

    .row
      // Error Logs Section
      .col-md-6.mb-4
        .card.h-100
          .card-header.bg-danger.text-white
            h3.mb-0 Recent Errors
          .card-body
            if recentErrors.length > 0
              .table-responsive
                table.table.table-sm.table-striped
                  thead
                    tr
                      th Time
                      th Error
                  tbody
                    each error in recentErrors
                      tr
                        td= new Date(error.timestamp).toLocaleString()
                        td= error.message || error.stack || JSON.stringify(error)
            else
              .alert.alert-success No recent errors! üëç

      // Performance Metrics Section
      .col-md-6.mb-4
        .card.h-100
          .card-header.bg-info.text-white
            h3.mb-0 Performance Metrics
          .card-body
            .row
              .col-md-6.mb-3
                .card.bg-light
                  .card-body
                    h5 Uptime
                    p.mb-0= Math.floor(performanceMetrics.uptime / 86400) + " days, " + Math.floor((performanceMetrics.uptime % 86400) / 3600) + " hours, " + Math.floor((performanceMetrics.uptime % 3600) / 60) + " minutes"

              .col-md-6.mb-3
                .card.bg-light
                  .card-body
                    h5 Memory Usage
                    .progress.mb-2
                      - const memoryUsagePercent = Math.round((performanceMetrics.memoryUsage.rss / performanceMetrics.systemMemory.total) * 100)
                      .progress-bar(role="progressbar", style=`width: ${memoryUsagePercent}%`, aria-valuenow=memoryUsagePercent, aria-valuemin="0", aria-valuemax="100")= memoryUsagePercent + "%"
                    p.mb-0= Math.round(performanceMetrics.memoryUsage.rss / 1024 / 1024) + " MB / " + Math.round(performanceMetrics.systemMemory.total / 1024 / 1024) + " MB"

            .row
              .col-md-6.mb-3
                .card.bg-light
                  .card-body
                    h5 CPU Load Average
                    p.mb-0 1 min: #{performanceMetrics.loadAverage[0].toFixed(2)}
                    p.mb-0 5 min: #{performanceMetrics.loadAverage[1].toFixed(2)}
                    p.mb-0 15 min: #{performanceMetrics.loadAverage[2].toFixed(2)}

              .col-md-6.mb-3
                .card.bg-light
                  .card-body
                    h5 Free Memory
                    .progress.mb-2
                      - const freeMemoryPercent = Math.round((performanceMetrics.systemMemory.free / performanceMetrics.systemMemory.total) * 100)
                      .progress-bar.bg-success(role="progressbar", style=`width: ${freeMemoryPercent}%`, aria-valuenow=freeMemoryPercent, aria-valuemin="0", aria-valuemax="100")= freeMemoryPercent + "%"
                    p.mb-0= Math.round(performanceMetrics.systemMemory.free / 1024 / 1024) + " MB / " + Math.round(performanceMetrics.systemMemory.total / 1024 / 1024) + " MB"

block scripts
  script.
    // Auto-refresh the dashboard every 30 seconds
    setTimeout(function() {
      window.location.reload();
    }, 30000);
